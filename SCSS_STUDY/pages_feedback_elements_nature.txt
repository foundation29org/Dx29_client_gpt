# ELEMENTOS DE INTERFAZ - FEEDBACK PAGE
# Identificaci√≥n completa de elementos visuales y su SCSS correspondiente
# ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

## ‚≠ê COMPONENTES DE RATING

### Estrellas de Valoraci√≥n (ng-bootstrap)
**Aspecto:** Estrellas FontAwesome muy grandes (40px) en color rojo brand
**Ubicaci√≥n:** Componente de rating dentro de formularios de feedback
**Prop√≥sito:** Permitir valoraci√≥n visual intuitiva mediante estrellas clickeables
**SCSS:** `:host ::ng-deep ngb-rating span` (l√≠neas 1-3) - `font-size: 2.5rem`

### Rating Personalizado
**Aspecto:** Elementos de rating en color rojo brand con CSS custom properties
**Ubicaci√≥n:** Componentes de rating espec√≠ficos con clase .my-rating
**Prop√≥sito:** Mantener consistencia visual con el brand, usar sistema de temas
**SCSS:** `.my-rating` (l√≠neas 5-7) - `color: var(--primary-color, #B30000)`

### Focus Visible en Rating
**Aspecto:** Sin outline visible al recibir focus por teclado
**Ubicaci√≥n:** Elementos de rating cuando se navega con teclado
**Prop√≥sito:** Eliminar outline por defecto (posible problema de accesibilidad)
**SCSS:** `.my-rating:focus-visible` (l√≠neas 9-11) - `outline: none`

## üìù ELEMENTOS DE FORMULARIO

### Contenedor de Checkbox
**Aspecto:** Contenedor flexbox horizontal con espacio de 8px entre elementos
**Ubicaci√≥n:** Checkboxes dentro de formularios de feedback
**Prop√≥sito:** Alinear checkboxes con sus labels, spacing consistente
**SCSS:** `.checkbox-container` (l√≠neas 13-17) - `display: flex; align-items: center; gap: 8px`

### Elementos Clickeables
**Aspecto:** Cursor pointer para indicar interactividad
**Ubicaci√≥n:** Elementos que requieren click (labels, botones, etc.)
**Prop√≥sito:** Proporcionar feedback visual de que el elemento es interactivo
**SCSS:** `.clickable` (l√≠neas 19-21) - `cursor: pointer`

## üéõÔ∏è ANGULAR MATERIAL OVERRIDES

### Labels de Radio Buttons (Material)
**Aspecto:** Texto normal (sin transformaciones), peso regular, spacing m√≠nimo
**Ubicaci√≥n:** Radio buttons de Angular Material en formularios
**Prop√≥sito:** Resetear estilos por defecto de Material, permitir texto multilinea
**SCSS:** `::ng-deep .mat-radio-label` (l√≠neas 23-30) - `white-space: normal; text-transform: none; font-weight: 400`

### Letter Spacing Conflictivo
**Aspecto:** Espaciado entre letras definido dos veces con valores diferentes
**Ubicaci√≥n:** Labels de Angular Material radio buttons
**Prop√≥sito:** Configurar spacing (tiene conflict: 0px y 0.3px)
**SCSS:** `.mat-radio-label` (l√≠neas 26 y 28) - `letter-spacing: 0px` luego `letter-spacing: 0.3px`

### Tama√±o de Fuente Material
**Aspecto:** Fuente de tama√±o base (16px) para consistencia
**Ubicaci√≥n:** Labels de componentes Angular Material
**Prop√≥sito:** Mantener tama√±o est√°ndar de fuente en toda la aplicaci√≥n
**SCSS:** `.mat-radio-label` (l√≠nea 29) - `font-size: 1rem`

## üè∑Ô∏è LABELS DE FORMULARIO

### Labels Generales de Formulario
**Aspecto:** Fuente de tama√±o base (16px) con !important para override
**Ubicaci√≥n:** Todos los labels dentro de forms y .form-group
**Prop√≥sito:** Asegurar tama√±o consistente de labels en toda la aplicaci√≥n
**SCSS:** `form label, .form-group label` (l√≠neas 32-34) - `font-size: 1rem !important`

## üì± ELEMENTOS RESPONSIVE EXTREMOS

### Contenedor Centrado M√≥vil Ultra Peque√±o
**Aspecto:** Elemento que elimina float y se centra
**Ubicaci√≥n:** Dispositivos con ancho m√°ximo de 380px (breakpoint muy espec√≠fico)
**Prop√≥sito:** Manejo legacy de layouts flotantes en pantallas muy peque√±as
**SCSS:** `@media (max-width: 380px) .centerdiv` (l√≠neas 36-42) - `clear: both; float: none !important`

## üîß ELEMENTOS T√âCNICOS Y OVERRIDES

### ViewEncapsulation Penetration
**Aspecto:** Selectores que penetran encapsulaci√≥n de Angular
**Ubicaci√≥n:** Componentes de terceros (ng-bootstrap, Angular Material)
**Prop√≥sito:** Modificar estilos de componentes externos que Angular encapsula
**SCSS:** `::ng-deep` (l√≠neas 1, 23) - Deprecated Angular feature

### Host Component Selector
**Aspecto:** Selector que aplica al componente host
**Ubicaci√≥n:** Componente Feedback como elemento host
**Prop√≥sito:** Aplicar estilos desde dentro del componente al elemento que lo contiene
**SCSS:** `:host` (l√≠nea 1) - Angular host selector

### CSS Custom Properties con Fallback
**Aspecto:** Variables CSS din√°micas con valor por defecto
**Ubicaci√≥n:** Elementos que usan sistema de temas
**Prop√≥sito:** Permitir temas din√°micos con fallback si variable no existe
**SCSS:** `var(--primary-color, #B30000)` (l√≠nea 6) - CSS custom property

## üö® ELEMENTOS PROBLEM√ÅTICOS

### Color Brand Inconsistente
**Aspecto:** Color rojo (#B30000) diferente al brand est√°ndar del proyecto
**Ubicaci√≥n:** Rating components y CSS custom properties
**Prop√≥sito:** Colorear elementos brand (pero inconsistente con #8B0000 usado elsewhere)
**SCSS:** Fallback value `#B30000` (l√≠nea 6) - Inconsistent with project brand

### Breakpoint No Est√°ndar
**Aspecto:** Media query con breakpoint de 380px muy espec√≠fico
**Ubicaci√≥n:** Estilos para dispositivos ultra peque√±os
**Prop√≥sito:** Manejo de layouts legacy (no sigue convenciones Bootstrap)
**SCSS:** `@media (max-width: 380px)` (l√≠nea 36) - Non-standard breakpoint

### Float Legacy
**Aspecto:** Manejo de elementos flotantes (t√©cnica pre-flexbox)
**Ubicaci√≥n:** Elementos .centerdiv en dispositivos muy peque√±os
**Prop√≥sito:** Resetear layouts flotantes legacy
**SCSS:** `clear: both; float: none` (l√≠neas 39-40) - Legacy CSS technique

### Multiple !important
**Aspecto:** M√∫ltiples declaraciones con !important para forzar estilos
**Ubicaci√≥n:** Labels de formulario y centerdiv responsive
**Prop√≥sito:** Override de estilos de frameworks externos
**SCSS:** `!important` (l√≠neas 33, 40) - Override mechanism

## üéØ ELEMENTOS DE ACCESIBILIDAD

### Focus Visible Moderno
**Aspecto:** Pseudo-clase moderna para indicar focus por teclado
**Ubicaci√≥n:** Elementos de rating cuando reciben focus
**Prop√≥sito:** Distinguir focus por teclado vs mouse (pero elimina outline)
**SCSS:** `:focus-visible` (l√≠nea 9) - Modern CSS pseudo-class

### White Space Normal
**Aspecto:** Permite que el texto haga wrap naturalmente
**Ubicaci√≥n:** Labels de radio buttons de Angular Material
**Prop√≥sito:** Mejorar legibilidad permitiendo texto multil√≠nea
**SCSS:** `white-space: normal` (l√≠nea 24) - Text wrapping control

## üìê SISTEMA DE ESPACIADO MINIMALISTA

### Gap Moderno
**Aspecto:** Espaciado de 8px usando propiedad gap de flexbox
**Ubicaci√≥n:** Contenedores de checkbox
**Prop√≥sito:** Espaciado consistente entre checkbox y label
**SCSS:** `gap: 8px` (l√≠nea 16) - Modern CSS spacing

### Letter Spacing Micro
**Aspecto:** Espaciado muy sutil (0.3px) entre caracteres
**Ubicaci√≥n:** Labels de Angular Material
**Prop√≥sito:** Mejorar legibilidad con spacing micro
**SCSS:** `letter-spacing: 0.3px` (l√≠nea 28) - Micro-typography

## üé® SISTEMA DE COLORES LIMITADO

### Color Primario Din√°mico
**Aspecto:** Rojo brand usando CSS custom properties
**Ubicaci√≥n:** Elementos de rating
**Prop√≥sito:** Permitir temas din√°micos, fallback para compatibilidad
**SCSS:** `var(--primary-color, #B30000)` (l√≠nea 6) - Dynamic theming

### Sin Colores Hardcoded Adicionales
**Aspecto:** El componente usa principalmente colores del sistema
**Ubicaci√≥n:** Elementos heredan colores de contexto
**Prop√≥sito:** Mantener simplicidad, delegar colores a sistema global
**SCSS:** No additional colors defined - Minimal approach

## üîÑ ELEMENTOS DE TRANSICI√ìN

### Sin Transiciones Definidas
**Aspecto:** El componente no define transiciones CSS
**Ubicaci√≥n:** No aplicable
**Prop√≥sito:** Simplicidad funcional, transiciones manejadas por frameworks
**SCSS:** No transitions defined - Functional minimalism

## üì± SISTEMA RESPONSIVE LIMITADO

### Single Breakpoint
**Aspecto:** Solo un breakpoint responsive muy espec√≠fico
**Ubicaci√≥n:** 380px para dispositivos ultra peque√±os
**Prop√≥sito:** Manejo edge case de pantallas muy peque√±as
**SCSS:** Single `@media` query (l√≠nea 36) - Limited responsive design

### Desktop-First Approach
**Aspecto:** Estilos base para desktop, overrides para m√≥vil
**Ubicaci√≥n:** Estructura general del componente
**Prop√≥sito:** Enfoque tradicional desktop-first
**SCSS:** Base styles + mobile overrides - Traditional approach